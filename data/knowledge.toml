version = 1

# Platforms
[platforms.linux]
precedence = ["script", "cargo", "github", "apt"]

[platforms.macos]
precedence = ["script", "cargo", "github", "brew"]

# Installers
[installers.apt]
type = "command"
check = ["apt", "--version"]
install = ["sudo", "apt", "install", "-y", "{package}"]
uninstall = ["sudo", "apt", "remove", "-y", "{package}"]
update = ["sudo", "apt", "upgrade", "-y", "{package}"]
install_output_pattern = '''Setting up {package}[^ ]* \(([^)]+)\)'''
version_check = { method = "command", command = ["apt-cache", "policy", "{package}"] }

[installers.brew]
type = "command"
check = ["brew", "--version"]
install = ["brew", "install", "{package}"]
uninstall = ["brew", "uninstall", "{package}"]
update = ["brew", "upgrade", "{package}"]
install_output_pattern = '''(?:Pouring|Installing) {package}--([0-9]+\.[0-9]+\.[0-9]+(?:_[0-9]+)?(?:-[a-zA-Z0-9.-]+)?)'''
version_check = { method = "command", command = ["brew", "info", "--json=v2", "{package}"] }

[installers.cargo]
type = "command"
check = ["cargo", "--version"]
install = ["cargo", "install", "{package}", "--locked"]
uninstall = ["cargo", "uninstall", "{package}"]
update = ["cargo", "install", "{package}", "--locked", "--force"]
install_output_pattern = '''package `{package} v([0-9]+\.[0-9]+\.[0-9]+(?:-[a-zA-Z0-9.-]+)?(?:\+[a-zA-Z0-9.-]+)?)`'''
version_check = { method = "api", url = "https://crates.io/api/v1/crates/{package}", path = "crate.max_version" }

[installers.github]
type = "command"
check = ["gh", "--version"]
install = ["gh", "release", "download", "--repo", "{repo}", "--pattern", "{pattern}", "--skip-existing", "--dir", "~/.local/bin"]
install_output_pattern = '''Downloading .*v([0-9]+\.[0-9]+\.[0-9]+(?:-[a-zA-Z0-9.-]+)?(?:\+[a-zA-Z0-9.-]+)?)'''
version_check = { method = "command", command = ["gh", "api", "repos/{repo}/releases/latest", "--jq", ".tag_name"] }

[installers.script]
type = "script"
install = ["sh", "-c", "{install_script}"]
uninstall = ["sh", "-c", "{uninstall_script}"]
update = ["sh", "-c", "{update_script}"]

# Tools
[tools.apt]
description = "Advanced Package Tool for Debian/Ubuntu"
provides = ["apt"]

[tools.apt.installers.script.linux]
install = '''echo "apt is already installed on Debian/Ubuntu systems"'''
update = '''sudo apt update && sudo apt upgrade -y apt'''

[tools.go]
description = "The Go programming language"
provides = ["go", "gofmt"]

[tools.go.installers.apt]
package = "golang-go"

[tools.go.installers.brew]
package = "go"

[tools.bat]
description = "A cat clone with syntax highlighting"

[tools.bat.installers.apt]
package = "bat"

[tools.bat.installers.brew]
package = "bat"

[tools.delta]
description = "A syntax-highlighting pager for git"

[tools.delta.installers.brew]
package = "git-delta"

[tools.delta.installers.cargo]
package = "git-delta"

[tools.fd]
description = "User-friendly alternative to find"

[tools.fd.installers.brew]
package = "fd"

[tools.fd.installers.cargo]
package = "fd-find"

[tools.gh]
description = "GitHub CLI for interacting with GitHub"
provides = ["gh"]

[tools.gh.installers.apt]
package = "gh"

[tools.gh.installers.brew]
package = "gh"

[tools.homebrew]
description = "The missing package manager for macOS"
provides = ["brew"]

[tools.homebrew.installers.script.macos]
install = '''/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"'''
uninstall = '''echo "To uninstall Homebrew, run:" && echo "/bin/bash -c \\"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/uninstall.sh)\\""'''
update = '''brew update'''

[tools.ripgrep]
description = "Blazing fast search tool that respects .gitignore"

[tools.ripgrep.installers.brew]
package = "ripgrep"

[tools.ripgrep.installers.cargo]
package = "ripgrep"

[tools.rust]
description = "Rust toolchain and cargo package manager"
provides = ["cargo", "rustc", "rustup"]

[tools.rust.installers.script.linux]
install = '''curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y'''
uninstall = '''rustup self uninstall -y 2>/dev/null || echo "Rust not installed via rustup"'''
update = '''rustup update'''

[tools.rust.installers.script.macos]
install = '''curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y'''
uninstall = '''rustup self uninstall -y 2>/dev/null || echo "Rust not installed via rustup"'''
update = '''rustup update'''
