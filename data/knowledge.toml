version = 1

# Patterns
[patterns]
semver = "([0-9]+\\.[0-9]+\\.[0-9]+(?:-[a-zA-Z0-9.-]+)?(?:\\+[a-zA-Z0-9.-]+)?)"

# Platforms
[platforms.linux]
precedence = ["script", "cargo", "github", "apt"]

[platforms.macos]
precedence = ["script", "cargo", "github", "brew"]

# Installers
[installers.cargo]
type = "command"
check = ["cargo", "--version"]
install = ["cargo", "install", "{package}", "--locked"]
uninstall = ["cargo", "uninstall", "{package}"]
install_output_pattern = "Installed package `{package} v${semver}"
version_check = { method = "api", url = "https://crates.io/api/v1/crates/{package}", path = "crate.max_version" }

[installers.github]
type = "command"
check = ["gh", "--version"]
install = ["gh", "release", "download", "--repo", "{repo}", "--pattern", "{pattern}", "--skip-existing", "--dir", "~/.local/bin"]
install_output_pattern = "Downloading .*v${semver}"
version_check = { method = "command", command = ["gh", "api", "repos/{repo}/releases/latest", "--jq", ".tag_name"] }

[installers.brew]
type = "command"
check = ["brew", "--version"]
install = ["brew", "install", "{package}"]
uninstall = ["brew", "uninstall", "{package}"]
install_output_pattern = "(?:Pouring|Installing) {package}--${semver}"
version_check = { method = "command", command = ["brew", "info", "--json=v2", "{package}"] }

[installers.apt]
type = "command"
check = ["apt", "--version"]
install = ["sudo", "apt", "install", "-y", "{package}"]
uninstall = ["sudo", "apt", "remove", "-y", "{package}"]
# apt includes extra version info, but we can still use semver pattern
install_output_pattern = "Setting up {package} \\(${semver}.*\\)"
version_check = { method = "command", command = ["apt-cache", "policy", "{package}"] }

[installers.script]
type = "script"
install = ["sh", "-c", "{script}"]
# No check - scripts are for bootstrapping
# No uninstall - these tools manage themselves


# Tools
[tools.rust]
description = "Rust toolchain and cargo package manager"
provides = ["cargo", "rustc", "rustup"]

[tools.rust.installers.script]
scripts.linux = "curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y"
scripts.macos = "curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y"

[tools.gh]
description = "GitHub CLI for interacting with GitHub"
provides = ["gh"]

[tools.gh.installers.apt]
package = "gh"

[tools.gh.installers.brew]
package = "gh"

[tools.homebrew]
description = "The missing package manager for macOS"
provides = ["brew"]

[tools.homebrew.installers.script]
scripts.macos = '/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"'

[tools.ripgrep]
description = "Blazing fast search tool that respects .gitignore"

[tools.ripgrep.installers.brew]
package = "ripgrep"

[tools.ripgrep.installers.cargo]
package = "ripgrep"

[tools.fd]
description = "User-friendly alternative to find"

[tools.fd.installers.cargo]
package = "fd-find"

[tools.fd.installers.brew]
package = "fd"

[tools.bat]
description = "A cat clone with syntax highlighting"

# [tools.bat.installers.cargo]
# package = "bat"

[tools.bat.installers.brew]
package = "bat"

[tools.bat.installers.apt]
package = "bat"

[tools.delta]
description = "A syntax-highlighting pager for git"

[tools.delta.installers.cargo]
package = "git-delta"

[tools.delta.installers.brew]
package = "git-delta"
